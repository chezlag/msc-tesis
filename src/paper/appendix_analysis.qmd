# Análisis adicionales
```{r lib-fcn}
library(groundhog)
pkgs <- c(
  "collapse",
  "data.table",
  "did",
  "fixest",
  "forcats",
  "fst",
  "ggplot2",
  "ggsci",
  "gtsummary",
  "kableExtra",
  "magrittr",
  "modelsummary",
  "purrr",
  "rlist",
  "stringr"
)
groundhog.library(pkgs, "2024-01-15")

ROOT <- ""
if (grepl("src/paper", getwd())) ROOT <- "../../"

source(paste0(ROOT, "src/lib/tidy_did.R"))
source(paste0(ROOT, "src/lib/theme_set.R"))
```

```{r read-data}
samples <- read_fst(paste0(ROOT, "out/data/samples.fst"), as.data.table = TRUE)
dty <- read_fst(paste0(ROOT, "out/data/firms_yearly.fst"), as.data.table = TRUE) %>%
  .[samples[(in214AnyT | in217AnyT)], on = "fid"]
dts <- read_fst(paste0(ROOT, "out/data/firms_static.fst"), as.data.table = TRUE) %>%
  .[samples[(in214AnyT | in217AnyT)], on = "fid"]
# fix sample NAs
walk(paste0("inSample", 0:2), ~ dts[is.na(get(.x)), (.x) := FALSE])
walk(paste0("inSample", 0:2), ~ dty[is.na(get(.x)), (.x) := FALSE])
dts[, neverTreated := is.na(nonAbsorbing)]
dty[, neverTreated := is.na(nonAbsorbing)]
```

```{r read-estimates}
# estimation specifications
estname <- c("S1.bal.base", "S1.bal.ctrl", "S1.bal.wt", "S2.bal.base", "S3.unbal.base", "S3.unbal.wt")
# read simple overall att
filelist <- estname %>% paste0(ROOT, "out/analysis/did_yearly_", ., "_aggte.simple.RDS")
simple_est <- lapply(filelist, readRDS)
simple <- map(
  filelist,
  ~ .x %>%
    readRDS() %>%
    map(possibly(tidy_did, NULL)) %>%
    reduce(rbind) %>%
    setDT() %>%
    .[, variable := str_remove_all(y.name, "^Scaled[12]|K$") %>% as_factor()]
)
# read dynamic att
filelist <- str_replace(filelist, "simple", "dynamic")
dynamic_est <- map(filelist, readRDS)
dynamic <- map(
  filelist,
  ~ .x %>%
    readRDS() %>%
    map(possibly(tidy_did, NULL)) %>%
    reduce(rbind) %>%
    setDT() %>%
    .[, variable := str_remove_all(y.name, "^Scaled[12]|K$") %>% as_factor()]
)
# name estimations
names(simple) <- estname
names(dynamic) <- estname
names(simple_est) <- estname
names(dynamic_est) <- estname
# set data.table
walk(simple, setDT)
walk(dynamic, setDT)
# add column with specification name
walk2(simple, estname, ~ .x[, sample := .y])
walk2(dynamic, estname, ~ .x[, sample := .y])
```

```{r fig-dens-trunover-fict}
#| fig-cap: Facturación reportada en millones de UI, por tipo de declaración.
dty[turnoverMUI %between% c(0.01, 30)] |>
  ggplot(aes(x = turnoverMUI, color = djFict, fill = djFict)) +
  geom_density(linewidth = 1, alpha = 0.3) +
  geom_vline(xintercept = 2, size = 1) +
  geom_vline(xintercept = 3, size = 1) +
  scale_x_continuous(expand = c(0, 0)) +
  coord_cartesian(xlim = c(0.01, 5)) +
  ggsci::scale_color_cosmic() +
  ggsci::scale_fill_cosmic() +
  labs(
    x = "Facturación en millones de UI", y = "Densidad",
    color = "DJ Ficta", fill = "DJ Ficta"
  )
```

```{r tbl-static-characteristics-desgranamiento}
#| tbl-cap: Descriptivas de panel balanceado y no balanceado (1 obs. = 1 firma).

varlist <- c(
  "inSample1",
  "receivedAnyT",
  "emittedAnyT",
  "neverTreated",
  "sector"
)
dts[inSample0 & djFictAnyT, ..varlist] %>%
  tbl_summary(by = "inSample1", missing = "no") %>%
  add_p()
```

```{r tbl-yearly-characteristics-desgranamiento}
#| tbl-cap: Descriptivas de panel balanceado y no balanceado (1 obs. = 1 año-firma).

varlist <- c(
  "inSample1",
  "Scaler1",
  "Scaled1deductPurchasesK",
  "Scaled1RevenueK",
  "Scaled1taxableTurnoverK",
  "Scaled1vatSalesK",
  "Scaled1vatPurchasesK",
  "Scaled1vatDueK",
  "Scaled1vatPaidK",
  "Scaled1corpTaxPaidK",
  "Scaled1otherTaxPaidK",
  "Scaled1totalTaxPaidK"
)
dty[inSample0 & djFict & year %in% 2009:2015, ..varlist] %>%
  .[, Scaler1 := Scaler1 / 1e06] %>%
  tbl_summary(
    by = "inSample1",
    # statistic = list(all_continuous() ~ "{mean} ({sd})"),
    missing = "no",
  ) %>%
  add_p()
```

```{r fig-dens-turnover-nevertreated}
#| fig-cap: Facturación reportada en millones de UI, por estado de tratamiento. Muestra principal.
dty[inSample1 & turnoverMUI %between% c(0.01, 30)] |>
  ggplot(aes(x = turnoverMUI, color = neverTreated, fill = neverTreated)) +
  geom_density(linewidth = 1, alpha = 0.3) +
  geom_vline(xintercept = 3, size = 1) +
  geom_vline(xintercept = 2, size = 1.5) +
  scale_x_continuous(expand = c(0, 0)) +
  coord_cartesian(xlim = c(0.01, 5)) +
  ggsci::scale_color_cosmic() +
  ggsci::scale_fill_cosmic() +
  labs(
    x = "Facturación en millones de UI", y = "Densidad",
    color = "Never-treated", fill = "Never-treated"
  )
```

```{r tbl-yearly-characteristics-nevertreated}
#| tbl-cap: Descriptivas de nunca tratados. Muestra principal. (1 obs. = 1 año-firma).

varlist <- c(
  "neverTreated",
  "Scaler1",
  "Scaled1deductPurchasesK",
  "Scaled1RevenueK",
  "Scaled1taxableTurnoverK",
  "Scaled1vatSalesK",
  "Scaled1vatPurchasesK",
  "Scaled1vatDueK",
  "Scaled1vatPaidK",
  "Scaled1corpTaxPaidK",
  "Scaled1otherTaxPaidK",
  "Scaled1totalTaxPaidK"
)
dty[inSample1 & djFict & year %in% 2009:2015, ..varlist] %>%
  .[, Scaler1 := Scaler1 / 1e06] %>%
  tbl_summary(
    by = "neverTreated",
    # statistic = list(all_continuous() ~ "{mean} ({sd})"),
    missing = "no",
  ) %>%
  add_p()
```

```{r fig-bunching-event}
#| fig-cap: Facturación anual reportada el año antes y el año después de recibir la primera factura electrónica. Muestra principal.
dty[, eventtime := year - yearFirstReception]
dty[, .N, eventtime]
dty[turnoverMUI < 5 & inSample1 & eventtime %in% c(-1, 1)] |>
  ggplot(aes(turnoverMUI, color = as.factor(eventtime))) +
  geom_density(linewidth = 1) +
  coord_cartesian(xlim = c(0, 5)) +
  ggsci::scale_color_cosmic() +
  geom_vline(xintercept = 2, linetype = "dashed") +
  geom_vline(xintercept = 3, linetype = "dashed") +
  labs(color = "Event time", x = "Facturación en millones de UI")
```

```{r fig-by.size-dynamic}
tidy_size <- readRDS(paste0(ROOT, "out/analysis/did_yearly_by.size_S2.bal.base_aggte.dynamic.RDS")) %>%
  map(possibly(tidy_did, NULL)) %>%
  reduce(rbind) %>%
  setDT() %>%
  .[, variable := str_remove_all(y.name, "^Scaled1|K$") %>%
    as_factor()]

quantlist <- 1:4
nvars <- tidy_size[, .N, y.name] %>%
  dim() %>%
  .[1]
tidy_size[term == "ATT (l = 3)", sizeQuartile := rep(quantlist, nvars) %>% as_factor()]
tidy_size[, sizeQuartile := nafill(as.integer(sizeQuartile), type = "nocb")]
tidy_size[, sizeQuartile := fcase(
  sizeQuartile == 1, "Quartile 1",
  sizeQuartile == 2, "Quartile 2",
  sizeQuartile == 3, "Quartile 3",
  sizeQuartile == 4, "Quartile 4"
)]

varlist <- c("deductPurchases", "taxableTurnover", "vatPaid")
tidy_size[variable %in% varlist & term != "ATT (l = 3)"] %>%
  ggplot(aes(x = event, y = estimate, color = variable)) +
  geom_point(position = position_dodge(width = .5)) +
  geom_errorbar(
    aes(
      ymin = conf.low,
      ymax = conf.high
    ),
    width = .2, 
    position = position_dodge(width = .5)
  ) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "maroon") +
  geom_vline(xintercept = -.5, linetype = "dashed") +
  ggsci::scale_color_futurama() +
  facet_grid(variable ~ sizeQuartile, scale = "free_y") +
  # coord_cartesian(ylim = c(-.25, .6)) +
  labs(color = NULL, caption = "[ 95% Simult. CI ]")
```


```{r tbl-S3.unbal.base-overall-att}
#| tbl-cap: Efecto de tratamiento agregado. Panel balanceado pre-tratamiento, permitiendo salidas.
estlist <- simple_est$S3.unbal.base
tbl <- estlist %>%
  map(possibly(tidy_did_list, NULL)) %>%
  list.filter(str_detect(tidy$y.name[[1]], "^Scaled1"))
colnames <- list.cases(tbl, tidy$y.name, sorted = FALSE)
names(tbl) <- str_remove_all(colnames, "^Scaled1|K$")
var_regex <- "deductPurchases|taxableTurnover|vatPurchases|vatSales|vatPaid"
ar <- data.frame(
  "Mean Y pre-2011",
  lapply(
    grep(var_regex, colnames, value = TRUE),
    \(x) dty[inSample3 & year <= 2011, fmean(get(x), na.rm = TRUE)]
  )
)
tbl %>%
  list.match(var_regex) %>%
  msummary(
    statistic = "conf.int",
    gof_map = c("nobs", "clustervars", "panel.balanced", "control.group"),
    add_rows = ar
  )
```
